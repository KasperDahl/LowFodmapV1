plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    // Add the Gradle Node plugin
    id 'com.github.node-gradle.node' version '3.1.0'
}

group = 'com.lowfodmapv1'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

node {
  // Use the locally installed Node.js and npm versions
  download = false
}

// Task to install frontend dependencies
task installFrontend(type: NpmTask) {
  // Update the working directory to 'src/main/resources/static'
  workingDir = file('src/main/resources/static')
  inputs.file('src/main/resources/static/package.json')
  inputs.file('src/main/resources/static/package-lock.json')
  outputs.dir('src/main/resources/static/node_modules')
  args = ['install']
}

// Task to build the frontend
task buildFrontend(type: NpmTask, dependsOn: installFrontend) {
  // Update the working directory to 'src/main/resources/static'
  workingDir = file('src/main/resources/static')
  inputs.dir('src/main/resources/static')
  outputs.dir('src/main/resources/static/dist')
  args = ['run', 'build']
}

// Make the 'bootRun' task depend on the 'buildFrontend' task
bootRun.dependsOn buildFrontend

// Declare an explicit dependency between the 'processResources' and 'installFrontend' tasks
processResources.dependsOn installFrontend

repositories {
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.1'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
